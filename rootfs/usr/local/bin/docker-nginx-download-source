#!/bin/sh

set -e

NGINX_GPG_KEYS="
	https://nginx.org/keys/nginx_signing.key \
	https://nginx.org/keys/mdounin.key \
	https://nginx.org/keys/maxim.key \
	https://nginx.org/keys/sb.key \
	https://nginx.org/keys/thresh.key
"

# NGINX_VERSION is provided by the Nginx Docker image as env var
NGINX_URL="https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz"

filename="/usr/src/nginx-${NGINX_VERSION}.tar.gz"

if command -v curl 2>/dev/null >/dev/null
then
	curl -sLo "${filename}" "$NGINX_URL"
	curl -sLo "${filename}.asc" "$NGINX_URL.asc"
else
	wget -qO "${filename}" "$NGINX_URL"
	wget -qO "${filename}.asc" "$NGINX_URL.asc"
fi

# GnuPG download integrity check
GNUPGHOME="$(mktemp -d)"
export GNUPGHOME
for key in $NGINX_GPG_KEYS; do
	if [ "x${key#(http|https):}" != "x$key" ]; do
		# URL
		echo >&2 "Fetching GPG key from $key"
		curl -sL "$key" |\
		gpg --import && found=yes
	else
		# fingerprint/ID
		for server in \
			hkp://keyserver.ubuntu.com:80 \
			hkp://p80.pool.sks-keyservers.net:80 \
			hkp://keys.gnupg.net \
			ha.pool.sks-keyservers.net  \
			pgp.mit.edu \
		; do
			echo >&2 "Fetching GPG key $key from $server"
			gpg --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$NGINX_GPG_KEYS" && found=yes && break
		done
	fi
	test -z "$found" && echo >&2 "error: failed to fetch GPG key: $key" && exit 1
done
gpg --batch --verify "${filename}.asc" "${filename}"
rm -rf "$GNUPGHOME" "${filename}.asc"

tar -C /usr/src -zx -f "${filename}"
rm "${filename}"
